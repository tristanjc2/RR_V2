{"ast":null,"code":"import * as util from \"../core/util.js\";\nconst error = () => {\n  const Sizable = {\n    string: {\n      unit: \"توکي\",\n      verb: \"ولري\"\n    },\n    file: {\n      unit: \"بایټس\",\n      verb: \"ولري\"\n    },\n    array: {\n      unit: \"توکي\",\n      verb: \"ولري\"\n    },\n    set: {\n      unit: \"توکي\",\n      verb: \"ولري\"\n    }\n  };\n  function getSizing(origin) {\n    var _Sizable$origin;\n    return (_Sizable$origin = Sizable[origin]) !== null && _Sizable$origin !== void 0 ? _Sizable$origin : null;\n  }\n  const parsedType = data => {\n    const t = typeof data;\n    switch (t) {\n      case \"number\":\n        {\n          return Number.isNaN(data) ? \"NaN\" : \"عدد\";\n        }\n      case \"object\":\n        {\n          if (Array.isArray(data)) {\n            return \"ارې\";\n          }\n          if (data === null) {\n            return \"null\";\n          }\n          if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n            return data.constructor.name;\n          }\n        }\n    }\n    return t;\n  };\n  const Nouns = {\n    regex: \"ورودي\",\n    email: \"بریښنالیک\",\n    url: \"یو آر ال\",\n    emoji: \"ایموجي\",\n    uuid: \"UUID\",\n    uuidv4: \"UUIDv4\",\n    uuidv6: \"UUIDv6\",\n    nanoid: \"nanoid\",\n    guid: \"GUID\",\n    cuid: \"cuid\",\n    cuid2: \"cuid2\",\n    ulid: \"ULID\",\n    xid: \"XID\",\n    ksuid: \"KSUID\",\n    datetime: \"نیټه او وخت\",\n    date: \"نېټه\",\n    time: \"وخت\",\n    duration: \"موده\",\n    ipv4: \"د IPv4 پته\",\n    ipv6: \"د IPv6 پته\",\n    cidrv4: \"د IPv4 ساحه\",\n    cidrv6: \"د IPv6 ساحه\",\n    base64: \"base64-encoded متن\",\n    base64url: \"base64url-encoded متن\",\n    json_string: \"JSON متن\",\n    e164: \"د E.164 شمېره\",\n    jwt: \"JWT\",\n    template_literal: \"ورودي\"\n  };\n  return issue => {\n    switch (issue.code) {\n      case \"invalid_type\":\n        return \"\\u0646\\u0627\\u0633\\u0645 \\u0648\\u0631\\u0648\\u062F\\u064A: \\u0628\\u0627\\u06CC\\u062F \".concat(issue.expected, \" \\u0648\\u0627\\u06CC, \\u0645\\u06AB\\u0631 \").concat(parsedType(issue.input), \" \\u062A\\u0631\\u0644\\u0627\\u0633\\u0647 \\u0634\\u0648\");\n      case \"invalid_value\":\n        if (issue.values.length === 1) {\n          return \"\\u0646\\u0627\\u0633\\u0645 \\u0648\\u0631\\u0648\\u062F\\u064A: \\u0628\\u0627\\u06CC\\u062F \".concat(util.stringifyPrimitive(issue.values[0]), \" \\u0648\\u0627\\u06CC\");\n        }\n        return \"\\u0646\\u0627\\u0633\\u0645 \\u0627\\u0646\\u062A\\u062E\\u0627\\u0628: \\u0628\\u0627\\u06CC\\u062F \\u06CC\\u0648 \\u0644\\u0647 \".concat(util.joinValues(issue.values, \"|\"), \" \\u0685\\u062E\\u0647 \\u0648\\u0627\\u06CC\");\n      case \"too_big\":\n        {\n          var _issue$origin2;\n          const adj = issue.inclusive ? \"<=\" : \"<\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) {\n            var _issue$origin, _sizing$unit;\n            return \"\\u0689\\u06CC\\u0631 \\u0644\\u0648\\u06CC: \".concat((_issue$origin = issue.origin) !== null && _issue$origin !== void 0 ? _issue$origin : \"ارزښت\", \" \\u0628\\u0627\\u06CC\\u062F \").concat(adj).concat(issue.maximum.toString(), \" \").concat((_sizing$unit = sizing.unit) !== null && _sizing$unit !== void 0 ? _sizing$unit : \"عنصرونه\", \" \\u0648\\u0644\\u0631\\u064A\");\n          }\n          return \"\\u0689\\u06CC\\u0631 \\u0644\\u0648\\u06CC: \".concat((_issue$origin2 = issue.origin) !== null && _issue$origin2 !== void 0 ? _issue$origin2 : \"ارزښت\", \" \\u0628\\u0627\\u06CC\\u062F \").concat(adj).concat(issue.maximum.toString(), \" \\u0648\\u064A\");\n        }\n      case \"too_small\":\n        {\n          const adj = issue.inclusive ? \">=\" : \">\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) {\n            return \"\\u0689\\u06CC\\u0631 \\u06A9\\u0648\\u0686\\u0646\\u06CC: \".concat(issue.origin, \" \\u0628\\u0627\\u06CC\\u062F \").concat(adj).concat(issue.minimum.toString(), \" \").concat(sizing.unit, \" \\u0648\\u0644\\u0631\\u064A\");\n          }\n          return \"\\u0689\\u06CC\\u0631 \\u06A9\\u0648\\u0686\\u0646\\u06CC: \".concat(issue.origin, \" \\u0628\\u0627\\u06CC\\u062F \").concat(adj).concat(issue.minimum.toString(), \" \\u0648\\u064A\");\n        }\n      case \"invalid_format\":\n        {\n          var _Nouns$_issue$format;\n          const _issue = issue;\n          if (_issue.format === \"starts_with\") {\n            return \"\\u0646\\u0627\\u0633\\u0645 \\u0645\\u062A\\u0646: \\u0628\\u0627\\u06CC\\u062F \\u062F \\\"\".concat(_issue.prefix, \"\\\" \\u0633\\u0631\\u0647 \\u067E\\u06CC\\u0644 \\u0634\\u064A\");\n          }\n          if (_issue.format === \"ends_with\") {\n            return \"\\u0646\\u0627\\u0633\\u0645 \\u0645\\u062A\\u0646: \\u0628\\u0627\\u06CC\\u062F \\u062F \\\"\".concat(_issue.suffix, \"\\\" \\u0633\\u0631\\u0647 \\u067E\\u0627\\u06CC \\u062A\\u0647 \\u0648\\u0631\\u0633\\u064A\\u0696\\u064A\");\n          }\n          if (_issue.format === \"includes\") {\n            return \"\\u0646\\u0627\\u0633\\u0645 \\u0645\\u062A\\u0646: \\u0628\\u0627\\u06CC\\u062F \\\"\".concat(_issue.includes, \"\\\" \\u0648\\u0644\\u0631\\u064A\");\n          }\n          if (_issue.format === \"regex\") {\n            return \"\\u0646\\u0627\\u0633\\u0645 \\u0645\\u062A\\u0646: \\u0628\\u0627\\u06CC\\u062F \\u062F \".concat(_issue.pattern, \" \\u0633\\u0631\\u0647 \\u0645\\u0637\\u0627\\u0628\\u0642\\u062A \\u0648\\u0644\\u0631\\u064A\");\n          }\n          return \"\".concat((_Nouns$_issue$format = Nouns[_issue.format]) !== null && _Nouns$_issue$format !== void 0 ? _Nouns$_issue$format : issue.format, \" \\u0646\\u0627\\u0633\\u0645 \\u062F\\u06CC\");\n        }\n      case \"not_multiple_of\":\n        return \"\\u0646\\u0627\\u0633\\u0645 \\u0639\\u062F\\u062F: \\u0628\\u0627\\u06CC\\u062F \\u062F \".concat(issue.divisor, \" \\u0645\\u0636\\u0631\\u0628 \\u0648\\u064A\");\n      case \"unrecognized_keys\":\n        return \"\\u0646\\u0627\\u0633\\u0645 \".concat(issue.keys.length > 1 ? \"کلیډونه\" : \"کلیډ\", \": \").concat(util.joinValues(issue.keys, \", \"));\n      case \"invalid_key\":\n        return \"\\u0646\\u0627\\u0633\\u0645 \\u06A9\\u0644\\u06CC\\u0689 \\u067E\\u0647 \".concat(issue.origin, \" \\u06A9\\u06D0\");\n      case \"invalid_union\":\n        return \"\\u0646\\u0627\\u0633\\u0645\\u0647 \\u0648\\u0631\\u0648\\u062F\\u064A\";\n      case \"invalid_element\":\n        return \"\\u0646\\u0627\\u0633\\u0645 \\u0639\\u0646\\u0635\\u0631 \\u067E\\u0647 \".concat(issue.origin, \" \\u06A9\\u06D0\");\n      default:\n        return \"\\u0646\\u0627\\u0633\\u0645\\u0647 \\u0648\\u0631\\u0648\\u062F\\u064A\";\n    }\n  };\n};\nexport default function () {\n  return {\n    localeError: error()\n  };\n}","map":{"version":3,"names":["util","error","Sizable","string","unit","verb","file","array","set","getSizing","origin","_Sizable$origin","parsedType","data","t","Number","isNaN","Array","isArray","Object","getPrototypeOf","prototype","constructor","name","Nouns","regex","email","url","emoji","uuid","uuidv4","uuidv6","nanoid","guid","cuid","cuid2","ulid","xid","ksuid","datetime","date","time","duration","ipv4","ipv6","cidrv4","cidrv6","base64","base64url","json_string","e164","jwt","template_literal","issue","code","concat","expected","input","values","length","stringifyPrimitive","joinValues","_issue$origin2","adj","inclusive","sizing","_issue$origin","_sizing$unit","maximum","toString","minimum","_Nouns$_issue$format","_issue","format","prefix","suffix","includes","pattern","divisor","keys","localeError"],"sources":["C:/RR_V3/node_modules/zod/dist/esm/v4/locales/ps.js"],"sourcesContent":["import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"توکي\", verb: \"ولري\" },\n        file: { unit: \"بایټس\", verb: \"ولري\" },\n        array: { unit: \"توکي\", verb: \"ولري\" },\n        set: { unit: \"توکي\", verb: \"ولري\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"عدد\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"ارې\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"ورودي\",\n        email: \"بریښنالیک\",\n        url: \"یو آر ال\",\n        emoji: \"ایموجي\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"نیټه او وخت\",\n        date: \"نېټه\",\n        time: \"وخت\",\n        duration: \"موده\",\n        ipv4: \"د IPv4 پته\",\n        ipv6: \"د IPv6 پته\",\n        cidrv4: \"د IPv4 ساحه\",\n        cidrv6: \"د IPv6 ساحه\",\n        base64: \"base64-encoded متن\",\n        base64url: \"base64url-encoded متن\",\n        json_string: \"JSON متن\",\n        e164: \"د E.164 شمېره\",\n        jwt: \"JWT\",\n        template_literal: \"ورودي\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `ناسم ورودي: باید ${issue.expected} وای, مګر ${parsedType(issue.input)} ترلاسه شو`;\n            case \"invalid_value\":\n                if (issue.values.length === 1) {\n                    return `ناسم ورودي: باید ${util.stringifyPrimitive(issue.values[0])} وای`;\n                }\n                return `ناسم انتخاب: باید یو له ${util.joinValues(issue.values, \"|\")} څخه وای`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `ډیر لوی: ${issue.origin ?? \"ارزښت\"} باید ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"عنصرونه\"} ولري`;\n                }\n                return `ډیر لوی: ${issue.origin ?? \"ارزښت\"} باید ${adj}${issue.maximum.toString()} وي`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `ډیر کوچنی: ${issue.origin} باید ${adj}${issue.minimum.toString()} ${sizing.unit} ولري`;\n                }\n                return `ډیر کوچنی: ${issue.origin} باید ${adj}${issue.minimum.toString()} وي`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `ناسم متن: باید د \"${_issue.prefix}\" سره پیل شي`;\n                }\n                if (_issue.format === \"ends_with\") {\n                    return `ناسم متن: باید د \"${_issue.suffix}\" سره پای ته ورسيږي`;\n                }\n                if (_issue.format === \"includes\") {\n                    return `ناسم متن: باید \"${_issue.includes}\" ولري`;\n                }\n                if (_issue.format === \"regex\") {\n                    return `ناسم متن: باید د ${_issue.pattern} سره مطابقت ولري`;\n                }\n                return `${Nouns[_issue.format] ?? issue.format} ناسم دی`;\n            }\n            case \"not_multiple_of\":\n                return `ناسم عدد: باید د ${issue.divisor} مضرب وي`;\n            case \"unrecognized_keys\":\n                return `ناسم ${issue.keys.length > 1 ? \"کلیډونه\" : \"کلیډ\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `ناسم کلیډ په ${issue.origin} کې`;\n            case \"invalid_union\":\n                return `ناسمه ورودي`;\n            case \"invalid_element\":\n                return `ناسم عنصر په ${issue.origin} کې`;\n            default:\n                return `ناسمه ورودي`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n"],"mappings":"AAAA,OAAO,KAAKA,IAAI,MAAM,iBAAiB;AACvC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAChB,MAAMC,OAAO,GAAG;IACZC,MAAM,EAAE;MAAEC,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAE;IAAO,CAAC;IACtCC,IAAI,EAAE;MAAEF,IAAI,EAAE,OAAO;MAAEC,IAAI,EAAE;IAAO,CAAC;IACrCE,KAAK,EAAE;MAAEH,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAE;IAAO,CAAC;IACrCG,GAAG,EAAE;MAAEJ,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAE;IAAO;EACtC,CAAC;EACD,SAASI,SAASA,CAACC,MAAM,EAAE;IAAA,IAAAC,eAAA;IACvB,QAAAA,eAAA,GAAOT,OAAO,CAACQ,MAAM,CAAC,cAAAC,eAAA,cAAAA,eAAA,GAAI,IAAI;EAClC;EACA,MAAMC,UAAU,GAAIC,IAAI,IAAK;IACzB,MAAMC,CAAC,GAAG,OAAOD,IAAI;IACrB,QAAQC,CAAC;MACL,KAAK,QAAQ;QAAE;UACX,OAAOC,MAAM,CAACC,KAAK,CAACH,IAAI,CAAC,GAAG,KAAK,GAAG,KAAK;QAC7C;MACA,KAAK,QAAQ;QAAE;UACX,IAAII,KAAK,CAACC,OAAO,CAACL,IAAI,CAAC,EAAE;YACrB,OAAO,KAAK;UAChB;UACA,IAAIA,IAAI,KAAK,IAAI,EAAE;YACf,OAAO,MAAM;UACjB;UACA,IAAIM,MAAM,CAACC,cAAc,CAACP,IAAI,CAAC,KAAKM,MAAM,CAACE,SAAS,IAAIR,IAAI,CAACS,WAAW,EAAE;YACtE,OAAOT,IAAI,CAACS,WAAW,CAACC,IAAI;UAChC;QACJ;IACJ;IACA,OAAOT,CAAC;EACZ,CAAC;EACD,MAAMU,KAAK,GAAG;IACVC,KAAK,EAAE,OAAO;IACdC,KAAK,EAAE,WAAW;IAClBC,GAAG,EAAE,UAAU;IACfC,KAAK,EAAE,QAAQ;IACfC,IAAI,EAAE,MAAM;IACZC,MAAM,EAAE,QAAQ;IAChBC,MAAM,EAAE,QAAQ;IAChBC,MAAM,EAAE,QAAQ;IAChBC,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE,OAAO;IACdC,IAAI,EAAE,MAAM;IACZC,GAAG,EAAE,KAAK;IACVC,KAAK,EAAE,OAAO;IACdC,QAAQ,EAAE,aAAa;IACvBC,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE,KAAK;IACXC,QAAQ,EAAE,MAAM;IAChBC,IAAI,EAAE,YAAY;IAClBC,IAAI,EAAE,YAAY;IAClBC,MAAM,EAAE,aAAa;IACrBC,MAAM,EAAE,aAAa;IACrBC,MAAM,EAAE,oBAAoB;IAC5BC,SAAS,EAAE,uBAAuB;IAClCC,WAAW,EAAE,UAAU;IACvBC,IAAI,EAAE,eAAe;IACrBC,GAAG,EAAE,KAAK;IACVC,gBAAgB,EAAE;EACtB,CAAC;EACD,OAAQC,KAAK,IAAK;IACd,QAAQA,KAAK,CAACC,IAAI;MACd,KAAK,cAAc;QACf,4FAAAC,MAAA,CAA2BF,KAAK,CAACG,QAAQ,8CAAAD,MAAA,CAAa3C,UAAU,CAACyC,KAAK,CAACI,KAAK,CAAC;MACjF,KAAK,eAAe;QAChB,IAAIJ,KAAK,CAACK,MAAM,CAACC,MAAM,KAAK,CAAC,EAAE;UAC3B,4FAAAJ,MAAA,CAA2BvD,IAAI,CAAC4D,kBAAkB,CAACP,KAAK,CAACK,MAAM,CAAC,CAAC,CAAC,CAAC;QACvE;QACA,4HAAAH,MAAA,CAAkCvD,IAAI,CAAC6D,UAAU,CAACR,KAAK,CAACK,MAAM,EAAE,GAAG,CAAC;MACxE,KAAK,SAAS;QAAE;UAAA,IAAAI,cAAA;UACZ,MAAMC,GAAG,GAAGV,KAAK,CAACW,SAAS,GAAG,IAAI,GAAG,GAAG;UACxC,MAAMC,MAAM,GAAGxD,SAAS,CAAC4C,KAAK,CAAC3C,MAAM,CAAC;UACtC,IAAIuD,MAAM,EAAE;YAAA,IAAAC,aAAA,EAAAC,YAAA;YACR,iDAAAZ,MAAA,EAAAW,aAAA,GAAmBb,KAAK,CAAC3C,MAAM,cAAAwD,aAAA,cAAAA,aAAA,GAAI,OAAO,gCAAAX,MAAA,CAASQ,GAAG,EAAAR,MAAA,CAAGF,KAAK,CAACe,OAAO,CAACC,QAAQ,CAAC,CAAC,OAAAd,MAAA,EAAAY,YAAA,GAAIF,MAAM,CAAC7D,IAAI,cAAA+D,YAAA,cAAAA,YAAA,GAAI,SAAS;UACjH;UACA,iDAAAZ,MAAA,EAAAO,cAAA,GAAmBT,KAAK,CAAC3C,MAAM,cAAAoD,cAAA,cAAAA,cAAA,GAAI,OAAO,gCAAAP,MAAA,CAASQ,GAAG,EAAAR,MAAA,CAAGF,KAAK,CAACe,OAAO,CAACC,QAAQ,CAAC,CAAC;QACrF;MACA,KAAK,WAAW;QAAE;UACd,MAAMN,GAAG,GAAGV,KAAK,CAACW,SAAS,GAAG,IAAI,GAAG,GAAG;UACxC,MAAMC,MAAM,GAAGxD,SAAS,CAAC4C,KAAK,CAAC3C,MAAM,CAAC;UACtC,IAAIuD,MAAM,EAAE;YACR,6DAAAV,MAAA,CAAqBF,KAAK,CAAC3C,MAAM,gCAAA6C,MAAA,CAASQ,GAAG,EAAAR,MAAA,CAAGF,KAAK,CAACiB,OAAO,CAACD,QAAQ,CAAC,CAAC,OAAAd,MAAA,CAAIU,MAAM,CAAC7D,IAAI;UAC3F;UACA,6DAAAmD,MAAA,CAAqBF,KAAK,CAAC3C,MAAM,gCAAA6C,MAAA,CAASQ,GAAG,EAAAR,MAAA,CAAGF,KAAK,CAACiB,OAAO,CAACD,QAAQ,CAAC,CAAC;QAC5E;MACA,KAAK,gBAAgB;QAAE;UAAA,IAAAE,oBAAA;UACnB,MAAMC,MAAM,GAAGnB,KAAK;UACpB,IAAImB,MAAM,CAACC,MAAM,KAAK,aAAa,EAAE;YACjC,yFAAAlB,MAAA,CAA4BiB,MAAM,CAACE,MAAM;UAC7C;UACA,IAAIF,MAAM,CAACC,MAAM,KAAK,WAAW,EAAE;YAC/B,yFAAAlB,MAAA,CAA4BiB,MAAM,CAACG,MAAM;UAC7C;UACA,IAAIH,MAAM,CAACC,MAAM,KAAK,UAAU,EAAE;YAC9B,kFAAAlB,MAAA,CAA0BiB,MAAM,CAACI,QAAQ;UAC7C;UACA,IAAIJ,MAAM,CAACC,MAAM,KAAK,OAAO,EAAE;YAC3B,uFAAAlB,MAAA,CAA2BiB,MAAM,CAACK,OAAO;UAC7C;UACA,UAAAtB,MAAA,EAAAgB,oBAAA,GAAU/C,KAAK,CAACgD,MAAM,CAACC,MAAM,CAAC,cAAAF,oBAAA,cAAAA,oBAAA,GAAIlB,KAAK,CAACoB,MAAM;QAClD;MACA,KAAK,iBAAiB;QAClB,uFAAAlB,MAAA,CAA2BF,KAAK,CAACyB,OAAO;MAC5C,KAAK,mBAAmB;QACpB,mCAAAvB,MAAA,CAAeF,KAAK,CAAC0B,IAAI,CAACpB,MAAM,GAAG,CAAC,GAAG,SAAS,GAAG,MAAM,QAAAJ,MAAA,CAAKvD,IAAI,CAAC6D,UAAU,CAACR,KAAK,CAAC0B,IAAI,EAAE,IAAI,CAAC;MACnG,KAAK,aAAa;QACd,yEAAAxB,MAAA,CAAuBF,KAAK,CAAC3C,MAAM;MACvC,KAAK,eAAe;QAChB;MACJ,KAAK,iBAAiB;QAClB,yEAAA6C,MAAA,CAAuBF,KAAK,CAAC3C,MAAM;MACvC;QACI;IACR;EACJ,CAAC;AACL,CAAC;AACD,eAAe,YAAY;EACvB,OAAO;IACHsE,WAAW,EAAE/E,KAAK,CAAC;EACvB,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}