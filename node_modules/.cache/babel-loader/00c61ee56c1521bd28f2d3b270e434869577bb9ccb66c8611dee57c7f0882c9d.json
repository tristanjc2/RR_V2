{"ast":null,"code":"import * as util from \"../core/util.js\";\nconst error = () => {\n  const Sizable = {\n    string: {\n      unit: \"tekens\"\n    },\n    file: {\n      unit: \"bytes\"\n    },\n    array: {\n      unit: \"elementen\"\n    },\n    set: {\n      unit: \"elementen\"\n    }\n  };\n  function getSizing(origin) {\n    var _Sizable$origin;\n    return (_Sizable$origin = Sizable[origin]) !== null && _Sizable$origin !== void 0 ? _Sizable$origin : null;\n  }\n  const parsedType = data => {\n    const t = typeof data;\n    switch (t) {\n      case \"number\":\n        {\n          return Number.isNaN(data) ? \"NaN\" : \"getal\";\n        }\n      case \"object\":\n        {\n          if (Array.isArray(data)) {\n            return \"array\";\n          }\n          if (data === null) {\n            return \"null\";\n          }\n          if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n            return data.constructor.name;\n          }\n        }\n    }\n    return t;\n  };\n  const Nouns = {\n    regex: \"invoer\",\n    email: \"emailadres\",\n    url: \"URL\",\n    emoji: \"emoji\",\n    uuid: \"UUID\",\n    uuidv4: \"UUIDv4\",\n    uuidv6: \"UUIDv6\",\n    nanoid: \"nanoid\",\n    guid: \"GUID\",\n    cuid: \"cuid\",\n    cuid2: \"cuid2\",\n    ulid: \"ULID\",\n    xid: \"XID\",\n    ksuid: \"KSUID\",\n    datetime: \"ISO datum en tijd\",\n    date: \"ISO datum\",\n    time: \"ISO tijd\",\n    duration: \"ISO duur\",\n    ipv4: \"IPv4-adres\",\n    ipv6: \"IPv6-adres\",\n    cidrv4: \"IPv4-bereik\",\n    cidrv6: \"IPv6-bereik\",\n    base64: \"base64-gecodeerde tekst\",\n    base64url: \"base64 URL-gecodeerde tekst\",\n    json_string: \"JSON string\",\n    e164: \"E.164-nummer\",\n    jwt: \"JWT\",\n    template_literal: \"invoer\"\n  };\n  return issue => {\n    switch (issue.code) {\n      case \"invalid_type\":\n        return \"Ongeldige invoer: verwacht \".concat(issue.expected, \", ontving \").concat(parsedType(issue.input));\n      case \"invalid_value\":\n        if (issue.values.length === 1) return \"Ongeldige invoer: verwacht \".concat(util.stringifyPrimitive(issue.values[0]));\n        return \"Ongeldige optie: verwacht \\xE9\\xE9n van \".concat(util.joinValues(issue.values, \"|\"));\n      case \"too_big\":\n        {\n          var _issue$origin, _sizing$unit, _issue$origin2;\n          const adj = issue.inclusive ? \"<=\" : \"<\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) return \"Te lang: verwacht dat \".concat((_issue$origin = issue.origin) !== null && _issue$origin !== void 0 ? _issue$origin : \"waarde\", \" \").concat(adj).concat(issue.maximum.toString(), \" \").concat((_sizing$unit = sizing.unit) !== null && _sizing$unit !== void 0 ? _sizing$unit : \"elementen\", \" bevat\");\n          return \"Te lang: verwacht dat \".concat((_issue$origin2 = issue.origin) !== null && _issue$origin2 !== void 0 ? _issue$origin2 : \"waarde\", \" \").concat(adj).concat(issue.maximum.toString(), \" is\");\n        }\n      case \"too_small\":\n        {\n          const adj = issue.inclusive ? \">=\" : \">\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) {\n            return \"Te kort: verwacht dat \".concat(issue.origin, \" \").concat(adj).concat(issue.minimum.toString(), \" \").concat(sizing.unit, \" bevat\");\n          }\n          return \"Te kort: verwacht dat \".concat(issue.origin, \" \").concat(adj).concat(issue.minimum.toString(), \" is\");\n        }\n      case \"invalid_format\":\n        {\n          var _Nouns$_issue$format;\n          const _issue = issue;\n          if (_issue.format === \"starts_with\") {\n            return \"Ongeldige tekst: moet met \\\"\".concat(_issue.prefix, \"\\\" beginnen\");\n          }\n          if (_issue.format === \"ends_with\") return \"Ongeldige tekst: moet op \\\"\".concat(_issue.suffix, \"\\\" eindigen\");\n          if (_issue.format === \"includes\") return \"Ongeldige tekst: moet \\\"\".concat(_issue.includes, \"\\\" bevatten\");\n          if (_issue.format === \"regex\") return \"Ongeldige tekst: moet overeenkomen met patroon \".concat(_issue.pattern);\n          return \"Ongeldig: \".concat((_Nouns$_issue$format = Nouns[_issue.format]) !== null && _Nouns$_issue$format !== void 0 ? _Nouns$_issue$format : issue.format);\n        }\n      case \"not_multiple_of\":\n        return \"Ongeldig getal: moet een veelvoud van \".concat(issue.divisor, \" zijn\");\n      case \"unrecognized_keys\":\n        return \"Onbekende key\".concat(issue.keys.length > 1 ? \"s\" : \"\", \": \").concat(util.joinValues(issue.keys, \", \"));\n      case \"invalid_key\":\n        return \"Ongeldige key in \".concat(issue.origin);\n      case \"invalid_union\":\n        return \"Ongeldige invoer\";\n      case \"invalid_element\":\n        return \"Ongeldige waarde in \".concat(issue.origin);\n      default:\n        return \"Ongeldige invoer\";\n    }\n  };\n};\nexport default function () {\n  return {\n    localeError: error()\n  };\n}","map":{"version":3,"names":["util","error","Sizable","string","unit","file","array","set","getSizing","origin","_Sizable$origin","parsedType","data","t","Number","isNaN","Array","isArray","Object","getPrototypeOf","prototype","constructor","name","Nouns","regex","email","url","emoji","uuid","uuidv4","uuidv6","nanoid","guid","cuid","cuid2","ulid","xid","ksuid","datetime","date","time","duration","ipv4","ipv6","cidrv4","cidrv6","base64","base64url","json_string","e164","jwt","template_literal","issue","code","concat","expected","input","values","length","stringifyPrimitive","joinValues","_issue$origin","_sizing$unit","_issue$origin2","adj","inclusive","sizing","maximum","toString","minimum","_Nouns$_issue$format","_issue","format","prefix","suffix","includes","pattern","divisor","keys","localeError"],"sources":["C:/RR_V3/node_modules/zod/dist/esm/v4/locales/nl.js"],"sourcesContent":["import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"tekens\" },\n        file: { unit: \"bytes\" },\n        array: { unit: \"elementen\" },\n        set: { unit: \"elementen\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"getal\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"invoer\",\n        email: \"emailadres\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO datum en tijd\",\n        date: \"ISO datum\",\n        time: \"ISO tijd\",\n        duration: \"ISO duur\",\n        ipv4: \"IPv4-adres\",\n        ipv6: \"IPv6-adres\",\n        cidrv4: \"IPv4-bereik\",\n        cidrv6: \"IPv6-bereik\",\n        base64: \"base64-gecodeerde tekst\",\n        base64url: \"base64 URL-gecodeerde tekst\",\n        json_string: \"JSON string\",\n        e164: \"E.164-nummer\",\n        jwt: \"JWT\",\n        template_literal: \"invoer\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Ongeldige invoer: verwacht ${issue.expected}, ontving ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Ongeldige invoer: verwacht ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Ongeldige optie: verwacht één van ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Te lang: verwacht dat ${issue.origin ?? \"waarde\"} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elementen\"} bevat`;\n                return `Te lang: verwacht dat ${issue.origin ?? \"waarde\"} ${adj}${issue.maximum.toString()} is`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Te kort: verwacht dat ${issue.origin} ${adj}${issue.minimum.toString()} ${sizing.unit} bevat`;\n                }\n                return `Te kort: verwacht dat ${issue.origin} ${adj}${issue.minimum.toString()} is`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `Ongeldige tekst: moet met \"${_issue.prefix}\" beginnen`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `Ongeldige tekst: moet op \"${_issue.suffix}\" eindigen`;\n                if (_issue.format === \"includes\")\n                    return `Ongeldige tekst: moet \"${_issue.includes}\" bevatten`;\n                if (_issue.format === \"regex\")\n                    return `Ongeldige tekst: moet overeenkomen met patroon ${_issue.pattern}`;\n                return `Ongeldig: ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Ongeldig getal: moet een veelvoud van ${issue.divisor} zijn`;\n            case \"unrecognized_keys\":\n                return `Onbekende key${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Ongeldige key in ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Ongeldige invoer\";\n            case \"invalid_element\":\n                return `Ongeldige waarde in ${issue.origin}`;\n            default:\n                return `Ongeldige invoer`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}