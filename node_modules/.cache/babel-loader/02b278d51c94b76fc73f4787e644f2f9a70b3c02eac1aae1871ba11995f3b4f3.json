{"ast":null,"code":"import{useState,useEffect,useCallback}from\"react\";import{db}from\"../firebase\";import{doc,getDoc,setDoc,updateDoc,arrayUnion,arrayRemove}from\"firebase/firestore\";import{getAuth}from\"firebase/auth\";// Hook for managing liked products for the current user\nexport default function useLikedProducts(){const[liked,setLiked]=useState([]);const[loading,setLoading]=useState(true);const auth=getAuth();const user=auth.currentUser;useEffect(()=>{if(!user){setLiked([]);setLoading(false);return;}setLoading(true);const ref=doc(db,\"users\",user.uid);getDoc(ref).then(snap=>{if(snap.exists()&&snap.data().likedProducts){setLiked(snap.data().likedProducts);}else{setLiked([]);}setLoading(false);});},[user]);const likeProduct=useCallback(async productId=>{if(!user)return;setLiked(prev=>prev.includes(productId)?prev:[...prev,productId]);const ref=doc(db,\"users\",user.uid);await setDoc(ref,{likedProducts:arrayUnion(productId)},{merge:true});},[user]);const unlikeProduct=useCallback(async productId=>{if(!user)return;setLiked(prev=>prev.filter(id=>id!==productId));const ref=doc(db,\"users\",user.uid);await updateDoc(ref,{likedProducts:arrayRemove(productId)});},[user]);const isProductLiked=useCallback(productId=>liked.includes(productId),[liked]);return{liked,loading,likeProduct,unlikeProduct,isProductLiked};}","map":{"version":3,"names":["useState","useEffect","useCallback","db","doc","getDoc","setDoc","updateDoc","arrayUnion","arrayRemove","getAuth","useLikedProducts","liked","setLiked","loading","setLoading","auth","user","currentUser","ref","uid","then","snap","exists","data","likedProducts","likeProduct","productId","prev","includes","merge","unlikeProduct","filter","id","isProductLiked"],"sources":["C:/RR_V3/src/hooks/useLikedProducts.js"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nimport { db } from \"../firebase\";\nimport {\n  doc,\n  getDoc,\n  setDoc,\n  updateDoc,\n  arrayUnion,\n  arrayRemove,\n} from \"firebase/firestore\";\nimport { getAuth } from \"firebase/auth\";\n\n// Hook for managing liked products for the current user\nexport default function useLikedProducts() {\n  const [liked, setLiked] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const auth = getAuth();\n  const user = auth.currentUser;\n\n  useEffect(() => {\n    if (!user) {\n      setLiked([]);\n      setLoading(false);\n      return;\n    }\n    setLoading(true);\n    const ref = doc(db, \"users\", user.uid);\n    getDoc(ref).then((snap) => {\n      if (snap.exists() && snap.data().likedProducts) {\n        setLiked(snap.data().likedProducts);\n      } else {\n        setLiked([]);\n      }\n      setLoading(false);\n    });\n  }, [user]);\n\n  const likeProduct = useCallback(\n    async (productId) => {\n      if (!user) return;\n      setLiked((prev) => (prev.includes(productId) ? prev : [...prev, productId]));\n      const ref = doc(db, \"users\", user.uid);\n      await setDoc(ref, { likedProducts: arrayUnion(productId) }, { merge: true });\n    },\n    [user]\n  );\n\n  const unlikeProduct = useCallback(\n    async (productId) => {\n      if (!user) return;\n      setLiked((prev) => prev.filter((id) => id !== productId));\n      const ref = doc(db, \"users\", user.uid);\n      await updateDoc(ref, { likedProducts: arrayRemove(productId) });\n    },\n    [user]\n  );\n\n  const isProductLiked = useCallback(\n    (productId) => liked.includes(productId),\n    [liked]\n  );\n\n  return { liked, loading, likeProduct, unlikeProduct, isProductLiked };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}