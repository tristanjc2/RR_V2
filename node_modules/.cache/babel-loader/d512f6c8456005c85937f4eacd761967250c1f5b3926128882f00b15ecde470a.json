{"ast":null,"code":"import * as util from \"../core/util.js\";\nexport const parsedType = data => {\n  const t = typeof data;\n  switch (t) {\n    case \"number\":\n      {\n        return Number.isNaN(data) ? \"NaN\" : \"number\";\n      }\n    case \"object\":\n      {\n        if (Array.isArray(data)) {\n          return \"array\";\n        }\n        if (data === null) {\n          return \"null\";\n        }\n        if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n          return data.constructor.name;\n        }\n      }\n  }\n  return t;\n};\nconst error = () => {\n  const Sizable = {\n    string: {\n      unit: \"karakter\",\n      verb: \"olmalı\"\n    },\n    file: {\n      unit: \"bayt\",\n      verb: \"olmalı\"\n    },\n    array: {\n      unit: \"öğe\",\n      verb: \"olmalı\"\n    },\n    set: {\n      unit: \"öğe\",\n      verb: \"olmalı\"\n    }\n  };\n  function getSizing(origin) {\n    var _Sizable$origin;\n    return (_Sizable$origin = Sizable[origin]) !== null && _Sizable$origin !== void 0 ? _Sizable$origin : null;\n  }\n  const Nouns = {\n    regex: \"girdi\",\n    email: \"e-posta adresi\",\n    url: \"URL\",\n    emoji: \"emoji\",\n    uuid: \"UUID\",\n    uuidv4: \"UUIDv4\",\n    uuidv6: \"UUIDv6\",\n    nanoid: \"nanoid\",\n    guid: \"GUID\",\n    cuid: \"cuid\",\n    cuid2: \"cuid2\",\n    ulid: \"ULID\",\n    xid: \"XID\",\n    ksuid: \"KSUID\",\n    datetime: \"ISO tarih ve saat\",\n    date: \"ISO tarih\",\n    time: \"ISO saat\",\n    duration: \"ISO süre\",\n    ipv4: \"IPv4 adresi\",\n    ipv6: \"IPv6 adresi\",\n    cidrv4: \"IPv4 aralığı\",\n    cidrv6: \"IPv6 aralığı\",\n    base64: \"base64 ile şifrelenmiş metin\",\n    base64url: \"base64url ile şifrelenmiş metin\",\n    json_string: \"JSON dizesi\",\n    e164: \"E.164 sayısı\",\n    jwt: \"JWT\",\n    template_literal: \"Şablon dizesi\"\n  };\n  return issue => {\n    switch (issue.code) {\n      case \"invalid_type\":\n        return \"Ge\\xE7ersiz de\\u011Fer: beklenen \".concat(issue.expected, \", al\\u0131nan \").concat(parsedType(issue.input));\n      case \"invalid_value\":\n        if (issue.values.length === 1) return \"Ge\\xE7ersiz de\\u011Fer: beklenen \".concat(util.stringifyPrimitive(issue.values[0]));\n        return \"Ge\\xE7ersiz se\\xE7enek: a\\u015Fa\\u011F\\u0131dakilerden biri olmal\\u0131: \".concat(util.joinValues(issue.values, \"|\"));\n      case \"too_big\":\n        {\n          var _issue$origin, _sizing$unit, _issue$origin2;\n          const adj = issue.inclusive ? \"<=\" : \"<\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) return \"\\xC7ok b\\xFCy\\xFCk: beklenen \".concat((_issue$origin = issue.origin) !== null && _issue$origin !== void 0 ? _issue$origin : \"değer\", \" \").concat(adj).concat(issue.maximum.toString(), \" \").concat((_sizing$unit = sizing.unit) !== null && _sizing$unit !== void 0 ? _sizing$unit : \"öğe\");\n          return \"\\xC7ok b\\xFCy\\xFCk: beklenen \".concat((_issue$origin2 = issue.origin) !== null && _issue$origin2 !== void 0 ? _issue$origin2 : \"değer\", \" \").concat(adj).concat(issue.maximum.toString());\n        }\n      case \"too_small\":\n        {\n          const adj = issue.inclusive ? \">=\" : \">\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) return \"\\xC7ok k\\xFC\\xE7\\xFCk: beklenen \".concat(issue.origin, \" \").concat(adj).concat(issue.minimum.toString(), \" \").concat(sizing.unit);\n          return \"\\xC7ok k\\xFC\\xE7\\xFCk: beklenen \".concat(issue.origin, \" \").concat(adj).concat(issue.minimum.toString());\n        }\n      case \"invalid_format\":\n        {\n          var _Nouns$_issue$format;\n          const _issue = issue;\n          if (_issue.format === \"starts_with\") return \"Ge\\xE7ersiz metin: \\\"\".concat(_issue.prefix, \"\\\" ile ba\\u015Flamal\\u0131\");\n          if (_issue.format === \"ends_with\") return \"Ge\\xE7ersiz metin: \\\"\".concat(_issue.suffix, \"\\\" ile bitmeli\");\n          if (_issue.format === \"includes\") return \"Ge\\xE7ersiz metin: \\\"\".concat(_issue.includes, \"\\\" i\\xE7ermeli\");\n          if (_issue.format === \"regex\") return \"Ge\\xE7ersiz metin: \".concat(_issue.pattern, \" desenine uymal\\u0131\");\n          return \"Ge\\xE7ersiz \".concat((_Nouns$_issue$format = Nouns[_issue.format]) !== null && _Nouns$_issue$format !== void 0 ? _Nouns$_issue$format : issue.format);\n        }\n      case \"not_multiple_of\":\n        return \"Ge\\xE7ersiz say\\u0131: \".concat(issue.divisor, \" ile tam b\\xF6l\\xFCnebilmeli\");\n      case \"unrecognized_keys\":\n        return \"Tan\\u0131nmayan anahtar\".concat(issue.keys.length > 1 ? \"lar\" : \"\", \": \").concat(util.joinValues(issue.keys, \", \"));\n      case \"invalid_key\":\n        return \"\".concat(issue.origin, \" i\\xE7inde ge\\xE7ersiz anahtar\");\n      case \"invalid_union\":\n        return \"Geçersiz değer\";\n      case \"invalid_element\":\n        return \"\".concat(issue.origin, \" i\\xE7inde ge\\xE7ersiz de\\u011Fer\");\n      default:\n        return \"Ge\\xE7ersiz de\\u011Fer\";\n    }\n  };\n};\nexport default function () {\n  return {\n    localeError: error()\n  };\n}","map":{"version":3,"names":["util","parsedType","data","t","Number","isNaN","Array","isArray","Object","getPrototypeOf","prototype","constructor","name","error","Sizable","string","unit","verb","file","array","set","getSizing","origin","_Sizable$origin","Nouns","regex","email","url","emoji","uuid","uuidv4","uuidv6","nanoid","guid","cuid","cuid2","ulid","xid","ksuid","datetime","date","time","duration","ipv4","ipv6","cidrv4","cidrv6","base64","base64url","json_string","e164","jwt","template_literal","issue","code","concat","expected","input","values","length","stringifyPrimitive","joinValues","_issue$origin","_sizing$unit","_issue$origin2","adj","inclusive","sizing","maximum","toString","minimum","_Nouns$_issue$format","_issue","format","prefix","suffix","includes","pattern","divisor","keys","localeError"],"sources":["C:/RR_V3/node_modules/zod/dist/esm/v4/locales/tr.js"],"sourcesContent":["import * as util from \"../core/util.js\";\nexport const parsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"number\": {\n            return Number.isNaN(data) ? \"NaN\" : \"number\";\n        }\n        case \"object\": {\n            if (Array.isArray(data)) {\n                return \"array\";\n            }\n            if (data === null) {\n                return \"null\";\n            }\n            if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                return data.constructor.name;\n            }\n        }\n    }\n    return t;\n};\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"karakter\", verb: \"olmalı\" },\n        file: { unit: \"bayt\", verb: \"olmalı\" },\n        array: { unit: \"öğe\", verb: \"olmalı\" },\n        set: { unit: \"öğe\", verb: \"olmalı\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const Nouns = {\n        regex: \"girdi\",\n        email: \"e-posta adresi\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO tarih ve saat\",\n        date: \"ISO tarih\",\n        time: \"ISO saat\",\n        duration: \"ISO süre\",\n        ipv4: \"IPv4 adresi\",\n        ipv6: \"IPv6 adresi\",\n        cidrv4: \"IPv4 aralığı\",\n        cidrv6: \"IPv6 aralığı\",\n        base64: \"base64 ile şifrelenmiş metin\",\n        base64url: \"base64url ile şifrelenmiş metin\",\n        json_string: \"JSON dizesi\",\n        e164: \"E.164 sayısı\",\n        jwt: \"JWT\",\n        template_literal: \"Şablon dizesi\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Geçersiz değer: beklenen ${issue.expected}, alınan ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Geçersiz değer: beklenen ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Geçersiz seçenek: aşağıdakilerden biri olmalı: ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Çok büyük: beklenen ${issue.origin ?? \"değer\"} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"öğe\"}`;\n                return `Çok büyük: beklenen ${issue.origin ?? \"değer\"} ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Çok küçük: beklenen ${issue.origin} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                return `Çok küçük: beklenen ${issue.origin} ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Geçersiz metin: \"${_issue.prefix}\" ile başlamalı`;\n                if (_issue.format === \"ends_with\")\n                    return `Geçersiz metin: \"${_issue.suffix}\" ile bitmeli`;\n                if (_issue.format === \"includes\")\n                    return `Geçersiz metin: \"${_issue.includes}\" içermeli`;\n                if (_issue.format === \"regex\")\n                    return `Geçersiz metin: ${_issue.pattern} desenine uymalı`;\n                return `Geçersiz ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Geçersiz sayı: ${issue.divisor} ile tam bölünebilmeli`;\n            case \"unrecognized_keys\":\n                return `Tanınmayan anahtar${issue.keys.length > 1 ? \"lar\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `${issue.origin} içinde geçersiz anahtar`;\n            case \"invalid_union\":\n                return \"Geçersiz değer\";\n            case \"invalid_element\":\n                return `${issue.origin} içinde geçersiz değer`;\n            default:\n                return `Geçersiz değer`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}