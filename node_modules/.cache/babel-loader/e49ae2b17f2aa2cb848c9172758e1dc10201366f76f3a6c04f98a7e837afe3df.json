{"ast":null,"code":"import _objectSpread from\"C:/RR_V3/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{db}from'./firebase.js';import{collection,addDoc,getDocs,query,where,doc,deleteDoc,updateDoc,serverTimestamp}from'firebase/firestore';const reviewsCollection=collection(db,'reviews');// Add a new review\nexport const addReview=async reviewData=>{try{await addDoc(reviewsCollection,_objectSpread(_objectSpread({},reviewData),{},{timestamp:serverTimestamp()}));}catch(error){console.error(\"Error adding review: \",error);throw new Error('Failed to submit review.');}};// Fetch all reviews (for general display)\nexport const fetchReviews=async()=>{try{const snapshot=await getDocs(reviewsCollection);return snapshot.docs.map(doc=>_objectSpread({id:doc.id},doc.data()));}catch(error){console.error(\"Error fetching reviews: \",error);throw new Error('Failed to load reviews.');}};// Fetch reviews for a specific user\nexport const fetchReviewsByUserId=async userId=>{if(!userId)return[];try{const q=query(reviewsCollection,where('userId','==',userId));const snapshot=await getDocs(q);return snapshot.docs.map(doc=>_objectSpread({id:doc.id},doc.data()));}catch(error){console.error(\"Error fetching user reviews: \",error);throw new Error('Failed to load your reviews.');}};// Update a review\nexport const updateReview=async(reviewId,updateFields)=>{try{const reviewDoc=doc(db,'reviews',reviewId);await updateDoc(reviewDoc,_objectSpread(_objectSpread({},updateFields),{},{lastUpdated:serverTimestamp()}));}catch(error){console.error(\"Error updating review: \",error);throw new Error('Failed to update review.');}};// Delete a review\nexport const deleteReview=async reviewId=>{try{const reviewDoc=doc(db,'reviews',reviewId);await deleteDoc(reviewDoc);}catch(error){console.error(\"Error deleting review: \",error);throw new Error('Failed to delete review.');}};","map":{"version":3,"names":["db","collection","addDoc","getDocs","query","where","doc","deleteDoc","updateDoc","serverTimestamp","reviewsCollection","addReview","reviewData","_objectSpread","timestamp","error","console","Error","fetchReviews","snapshot","docs","map","id","data","fetchReviewsByUserId","userId","q","updateReview","reviewId","updateFields","reviewDoc","lastUpdated","deleteReview"],"sources":["C:/RR_V3/src/firebaseReviews.js"],"sourcesContent":["import { db } from './firebase.js';\nimport { collection, addDoc, getDocs, query, where, doc, deleteDoc, updateDoc, serverTimestamp } from 'firebase/firestore';\n\nconst reviewsCollection = collection(db, 'reviews');\n\n// Add a new review\nexport const addReview = async (reviewData) => {\n  try {\n    await addDoc(reviewsCollection, {\n      ...reviewData,\n      timestamp: serverTimestamp(),\n    });\n  } catch (error) {\n    console.error(\"Error adding review: \", error);\n    throw new Error('Failed to submit review.');\n  }\n};\n\n// Fetch all reviews (for general display)\nexport const fetchReviews = async () => {\n  try {\n    const snapshot = await getDocs(reviewsCollection);\n    return snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n  } catch (error) {\n    console.error(\"Error fetching reviews: \", error);\n    throw new Error('Failed to load reviews.');\n  }\n};\n\n// Fetch reviews for a specific user\nexport const fetchReviewsByUserId = async (userId) => {\n    if (!userId) return [];\n    try {\n        const q = query(reviewsCollection, where('userId', '==', userId));\n        const snapshot = await getDocs(q);\n        return snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n    } catch (error) {\n        console.error(\"Error fetching user reviews: \", error);\n        throw new Error('Failed to load your reviews.');\n    }\n};\n\n// Update a review\nexport const updateReview = async (reviewId, updateFields) => {\n    try {\n        const reviewDoc = doc(db, 'reviews', reviewId);\n        await updateDoc(reviewDoc, {\n            ...updateFields,\n            lastUpdated: serverTimestamp()\n        });\n    } catch (error) {\n        console.error(\"Error updating review: \", error);\n        throw new Error('Failed to update review.');\n    }\n};\n\n// Delete a review\nexport const deleteReview = async (reviewId) => {\n  try {\n    const reviewDoc = doc(db, 'reviews', reviewId);\n    await deleteDoc(reviewDoc);\n  } catch (error) {\n    console.error(\"Error deleting review: \", error);\n    throw new Error('Failed to delete review.');\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}