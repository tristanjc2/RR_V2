{"ast":null,"code":"import * as util from \"../core/util.js\";\nconst error = () => {\n  const Sizable = {\n    string: {\n      unit: \"merkkiä\",\n      subject: \"merkkijonon\"\n    },\n    file: {\n      unit: \"tavua\",\n      subject: \"tiedoston\"\n    },\n    array: {\n      unit: \"alkiota\",\n      subject: \"listan\"\n    },\n    set: {\n      unit: \"alkiota\",\n      subject: \"joukon\"\n    },\n    number: {\n      unit: \"\",\n      subject: \"luvun\"\n    },\n    bigint: {\n      unit: \"\",\n      subject: \"suuren kokonaisluvun\"\n    },\n    int: {\n      unit: \"\",\n      subject: \"kokonaisluvun\"\n    },\n    date: {\n      unit: \"\",\n      subject: \"päivämäärän\"\n    }\n  };\n  function getSizing(origin) {\n    var _Sizable$origin;\n    return (_Sizable$origin = Sizable[origin]) !== null && _Sizable$origin !== void 0 ? _Sizable$origin : null;\n  }\n  const parsedType = data => {\n    const t = typeof data;\n    switch (t) {\n      case \"number\":\n        {\n          return Number.isNaN(data) ? \"NaN\" : \"number\";\n        }\n      case \"object\":\n        {\n          if (Array.isArray(data)) {\n            return \"array\";\n          }\n          if (data === null) {\n            return \"null\";\n          }\n          if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n            return data.constructor.name;\n          }\n        }\n    }\n    return t;\n  };\n  const Nouns = {\n    regex: \"säännöllinen lauseke\",\n    email: \"sähköpostiosoite\",\n    url: \"URL-osoite\",\n    emoji: \"emoji\",\n    uuid: \"UUID\",\n    uuidv4: \"UUIDv4\",\n    uuidv6: \"UUIDv6\",\n    nanoid: \"nanoid\",\n    guid: \"GUID\",\n    cuid: \"cuid\",\n    cuid2: \"cuid2\",\n    ulid: \"ULID\",\n    xid: \"XID\",\n    ksuid: \"KSUID\",\n    datetime: \"ISO-aikaleima\",\n    date: \"ISO-päivämäärä\",\n    time: \"ISO-aika\",\n    duration: \"ISO-kesto\",\n    ipv4: \"IPv4-osoite\",\n    ipv6: \"IPv6-osoite\",\n    cidrv4: \"IPv4-alue\",\n    cidrv6: \"IPv6-alue\",\n    base64: \"base64-koodattu merkkijono\",\n    base64url: \"base64url-koodattu merkkijono\",\n    json_string: \"JSON-merkkijono\",\n    e164: \"E.164-luku\",\n    jwt: \"JWT\",\n    template_literal: \"templaattimerkkijono\"\n  };\n  return issue => {\n    switch (issue.code) {\n      case \"invalid_type\":\n        return \"Virheellinen tyyppi: odotettiin \".concat(issue.expected, \", oli \").concat(parsedType(issue.input));\n      case \"invalid_value\":\n        if (issue.values.length === 1) return \"Virheellinen sy\\xF6te: t\\xE4ytyy olla \".concat(util.stringifyPrimitive(issue.values[0]));\n        return \"Virheellinen valinta: t\\xE4ytyy olla yksi seuraavista: \".concat(util.joinValues(issue.values, \"|\"));\n      case \"too_big\":\n        {\n          const adj = issue.inclusive ? \"<=\" : \"<\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) {\n            return \"Liian suuri: \".concat(sizing.subject, \" t\\xE4ytyy olla \").concat(adj).concat(issue.maximum.toString(), \" \").concat(sizing.unit).trim();\n          }\n          return \"Liian suuri: arvon t\\xE4ytyy olla \".concat(adj).concat(issue.maximum.toString());\n        }\n      case \"too_small\":\n        {\n          const adj = issue.inclusive ? \">=\" : \">\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) {\n            return \"Liian pieni: \".concat(sizing.subject, \" t\\xE4ytyy olla \").concat(adj).concat(issue.minimum.toString(), \" \").concat(sizing.unit).trim();\n          }\n          return \"Liian pieni: arvon t\\xE4ytyy olla \".concat(adj).concat(issue.minimum.toString());\n        }\n      case \"invalid_format\":\n        {\n          var _Nouns$_issue$format;\n          const _issue = issue;\n          if (_issue.format === \"starts_with\") return \"Virheellinen sy\\xF6te: t\\xE4ytyy alkaa \\\"\".concat(_issue.prefix, \"\\\"\");\n          if (_issue.format === \"ends_with\") return \"Virheellinen sy\\xF6te: t\\xE4ytyy loppua \\\"\".concat(_issue.suffix, \"\\\"\");\n          if (_issue.format === \"includes\") return \"Virheellinen sy\\xF6te: t\\xE4ytyy sis\\xE4lt\\xE4\\xE4 \\\"\".concat(_issue.includes, \"\\\"\");\n          if (_issue.format === \"regex\") {\n            return \"Virheellinen sy\\xF6te: t\\xE4ytyy vastata s\\xE4\\xE4nn\\xF6llist\\xE4 lauseketta \".concat(_issue.pattern);\n          }\n          return \"Virheellinen \".concat((_Nouns$_issue$format = Nouns[_issue.format]) !== null && _Nouns$_issue$format !== void 0 ? _Nouns$_issue$format : issue.format);\n        }\n      case \"not_multiple_of\":\n        return \"Virheellinen luku: t\\xE4ytyy olla luvun \".concat(issue.divisor, \" monikerta\");\n      case \"unrecognized_keys\":\n        return \"\".concat(issue.keys.length > 1 ? \"Tuntemattomat avaimet\" : \"Tuntematon avain\", \": \").concat(util.joinValues(issue.keys, \", \"));\n      case \"invalid_key\":\n        return \"Virheellinen avain tietueessa\";\n      case \"invalid_union\":\n        return \"Virheellinen unioni\";\n      case \"invalid_element\":\n        return \"Virheellinen arvo joukossa\";\n      default:\n        return \"Virheellinen sy\\xF6te\";\n    }\n  };\n};\nexport default function () {\n  return {\n    localeError: error()\n  };\n}","map":{"version":3,"names":["util","error","Sizable","string","unit","subject","file","array","set","number","bigint","int","date","getSizing","origin","_Sizable$origin","parsedType","data","t","Number","isNaN","Array","isArray","Object","getPrototypeOf","prototype","constructor","name","Nouns","regex","email","url","emoji","uuid","uuidv4","uuidv6","nanoid","guid","cuid","cuid2","ulid","xid","ksuid","datetime","time","duration","ipv4","ipv6","cidrv4","cidrv6","base64","base64url","json_string","e164","jwt","template_literal","issue","code","concat","expected","input","values","length","stringifyPrimitive","joinValues","adj","inclusive","sizing","maximum","toString","trim","minimum","_Nouns$_issue$format","_issue","format","prefix","suffix","includes","pattern","divisor","keys","localeError"],"sources":["C:/RR_V3/node_modules/zod/dist/esm/v4/locales/fi.js"],"sourcesContent":["import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"merkkiä\", subject: \"merkkijonon\" },\n        file: { unit: \"tavua\", subject: \"tiedoston\" },\n        array: { unit: \"alkiota\", subject: \"listan\" },\n        set: { unit: \"alkiota\", subject: \"joukon\" },\n        number: { unit: \"\", subject: \"luvun\" },\n        bigint: { unit: \"\", subject: \"suuren kokonaisluvun\" },\n        int: { unit: \"\", subject: \"kokonaisluvun\" },\n        date: { unit: \"\", subject: \"päivämäärän\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"säännöllinen lauseke\",\n        email: \"sähköpostiosoite\",\n        url: \"URL-osoite\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO-aikaleima\",\n        date: \"ISO-päivämäärä\",\n        time: \"ISO-aika\",\n        duration: \"ISO-kesto\",\n        ipv4: \"IPv4-osoite\",\n        ipv6: \"IPv6-osoite\",\n        cidrv4: \"IPv4-alue\",\n        cidrv6: \"IPv6-alue\",\n        base64: \"base64-koodattu merkkijono\",\n        base64url: \"base64url-koodattu merkkijono\",\n        json_string: \"JSON-merkkijono\",\n        e164: \"E.164-luku\",\n        jwt: \"JWT\",\n        template_literal: \"templaattimerkkijono\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Virheellinen tyyppi: odotettiin ${issue.expected}, oli ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Virheellinen syöte: täytyy olla ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Virheellinen valinta: täytyy olla yksi seuraavista: ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Liian suuri: ${sizing.subject} täytyy olla ${adj}${issue.maximum.toString()} ${sizing.unit}`.trim();\n                }\n                return `Liian suuri: arvon täytyy olla ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Liian pieni: ${sizing.subject} täytyy olla ${adj}${issue.minimum.toString()} ${sizing.unit}`.trim();\n                }\n                return `Liian pieni: arvon täytyy olla ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Virheellinen syöte: täytyy alkaa \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Virheellinen syöte: täytyy loppua \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Virheellinen syöte: täytyy sisältää \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\") {\n                    return `Virheellinen syöte: täytyy vastata säännöllistä lauseketta ${_issue.pattern}`;\n                }\n                return `Virheellinen ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Virheellinen luku: täytyy olla luvun ${issue.divisor} monikerta`;\n            case \"unrecognized_keys\":\n                return `${issue.keys.length > 1 ? \"Tuntemattomat avaimet\" : \"Tuntematon avain\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return \"Virheellinen avain tietueessa\";\n            case \"invalid_union\":\n                return \"Virheellinen unioni\";\n            case \"invalid_element\":\n                return \"Virheellinen arvo joukossa\";\n            default:\n                return `Virheellinen syöte`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n"],"mappings":"AAAA,OAAO,KAAKA,IAAI,MAAM,iBAAiB;AACvC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAChB,MAAMC,OAAO,GAAG;IACZC,MAAM,EAAE;MAAEC,IAAI,EAAE,SAAS;MAAEC,OAAO,EAAE;IAAc,CAAC;IACnDC,IAAI,EAAE;MAAEF,IAAI,EAAE,OAAO;MAAEC,OAAO,EAAE;IAAY,CAAC;IAC7CE,KAAK,EAAE;MAAEH,IAAI,EAAE,SAAS;MAAEC,OAAO,EAAE;IAAS,CAAC;IAC7CG,GAAG,EAAE;MAAEJ,IAAI,EAAE,SAAS;MAAEC,OAAO,EAAE;IAAS,CAAC;IAC3CI,MAAM,EAAE;MAAEL,IAAI,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAQ,CAAC;IACtCK,MAAM,EAAE;MAAEN,IAAI,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAuB,CAAC;IACrDM,GAAG,EAAE;MAAEP,IAAI,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAgB,CAAC;IAC3CO,IAAI,EAAE;MAAER,IAAI,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAc;EAC7C,CAAC;EACD,SAASQ,SAASA,CAACC,MAAM,EAAE;IAAA,IAAAC,eAAA;IACvB,QAAAA,eAAA,GAAOb,OAAO,CAACY,MAAM,CAAC,cAAAC,eAAA,cAAAA,eAAA,GAAI,IAAI;EAClC;EACA,MAAMC,UAAU,GAAIC,IAAI,IAAK;IACzB,MAAMC,CAAC,GAAG,OAAOD,IAAI;IACrB,QAAQC,CAAC;MACL,KAAK,QAAQ;QAAE;UACX,OAAOC,MAAM,CAACC,KAAK,CAACH,IAAI,CAAC,GAAG,KAAK,GAAG,QAAQ;QAChD;MACA,KAAK,QAAQ;QAAE;UACX,IAAII,KAAK,CAACC,OAAO,CAACL,IAAI,CAAC,EAAE;YACrB,OAAO,OAAO;UAClB;UACA,IAAIA,IAAI,KAAK,IAAI,EAAE;YACf,OAAO,MAAM;UACjB;UACA,IAAIM,MAAM,CAACC,cAAc,CAACP,IAAI,CAAC,KAAKM,MAAM,CAACE,SAAS,IAAIR,IAAI,CAACS,WAAW,EAAE;YACtE,OAAOT,IAAI,CAACS,WAAW,CAACC,IAAI;UAChC;QACJ;IACJ;IACA,OAAOT,CAAC;EACZ,CAAC;EACD,MAAMU,KAAK,GAAG;IACVC,KAAK,EAAE,sBAAsB;IAC7BC,KAAK,EAAE,kBAAkB;IACzBC,GAAG,EAAE,YAAY;IACjBC,KAAK,EAAE,OAAO;IACdC,IAAI,EAAE,MAAM;IACZC,MAAM,EAAE,QAAQ;IAChBC,MAAM,EAAE,QAAQ;IAChBC,MAAM,EAAE,QAAQ;IAChBC,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE,OAAO;IACdC,IAAI,EAAE,MAAM;IACZC,GAAG,EAAE,KAAK;IACVC,KAAK,EAAE,OAAO;IACdC,QAAQ,EAAE,eAAe;IACzB/B,IAAI,EAAE,gBAAgB;IACtBgC,IAAI,EAAE,UAAU;IAChBC,QAAQ,EAAE,WAAW;IACrBC,IAAI,EAAE,aAAa;IACnBC,IAAI,EAAE,aAAa;IACnBC,MAAM,EAAE,WAAW;IACnBC,MAAM,EAAE,WAAW;IACnBC,MAAM,EAAE,4BAA4B;IACpCC,SAAS,EAAE,+BAA+B;IAC1CC,WAAW,EAAE,iBAAiB;IAC9BC,IAAI,EAAE,YAAY;IAClBC,GAAG,EAAE,KAAK;IACVC,gBAAgB,EAAE;EACtB,CAAC;EACD,OAAQC,KAAK,IAAK;IACd,QAAQA,KAAK,CAACC,IAAI;MACd,KAAK,cAAc;QACf,0CAAAC,MAAA,CAA0CF,KAAK,CAACG,QAAQ,YAAAD,MAAA,CAAS1C,UAAU,CAACwC,KAAK,CAACI,KAAK,CAAC;MAC5F,KAAK,eAAe;QAChB,IAAIJ,KAAK,CAACK,MAAM,CAACC,MAAM,KAAK,CAAC,EACzB,gDAAAJ,MAAA,CAA0C1D,IAAI,CAAC+D,kBAAkB,CAACP,KAAK,CAACK,MAAM,CAAC,CAAC,CAAC,CAAC;QACtF,iEAAAH,MAAA,CAA8D1D,IAAI,CAACgE,UAAU,CAACR,KAAK,CAACK,MAAM,EAAE,GAAG,CAAC;MACpG,KAAK,SAAS;QAAE;UACZ,MAAMI,GAAG,GAAGT,KAAK,CAACU,SAAS,GAAG,IAAI,GAAG,GAAG;UACxC,MAAMC,MAAM,GAAGtD,SAAS,CAAC2C,KAAK,CAAC1C,MAAM,CAAC;UACtC,IAAIqD,MAAM,EAAE;YACR,OAAO,gBAAAT,MAAA,CAAgBS,MAAM,CAAC9D,OAAO,sBAAAqD,MAAA,CAAgBO,GAAG,EAAAP,MAAA,CAAGF,KAAK,CAACY,OAAO,CAACC,QAAQ,CAAC,CAAC,OAAAX,MAAA,CAAIS,MAAM,CAAC/D,IAAI,EAAGkE,IAAI,CAAC,CAAC;UAC/G;UACA,4CAAAZ,MAAA,CAAyCO,GAAG,EAAAP,MAAA,CAAGF,KAAK,CAACY,OAAO,CAACC,QAAQ,CAAC,CAAC;QAC3E;MACA,KAAK,WAAW;QAAE;UACd,MAAMJ,GAAG,GAAGT,KAAK,CAACU,SAAS,GAAG,IAAI,GAAG,GAAG;UACxC,MAAMC,MAAM,GAAGtD,SAAS,CAAC2C,KAAK,CAAC1C,MAAM,CAAC;UACtC,IAAIqD,MAAM,EAAE;YACR,OAAO,gBAAAT,MAAA,CAAgBS,MAAM,CAAC9D,OAAO,sBAAAqD,MAAA,CAAgBO,GAAG,EAAAP,MAAA,CAAGF,KAAK,CAACe,OAAO,CAACF,QAAQ,CAAC,CAAC,OAAAX,MAAA,CAAIS,MAAM,CAAC/D,IAAI,EAAGkE,IAAI,CAAC,CAAC;UAC/G;UACA,4CAAAZ,MAAA,CAAyCO,GAAG,EAAAP,MAAA,CAAGF,KAAK,CAACe,OAAO,CAACF,QAAQ,CAAC,CAAC;QAC3E;MACA,KAAK,gBAAgB;QAAE;UAAA,IAAAG,oBAAA;UACnB,MAAMC,MAAM,GAAGjB,KAAK;UACpB,IAAIiB,MAAM,CAACC,MAAM,KAAK,aAAa,EAC/B,mDAAAhB,MAAA,CAA4Ce,MAAM,CAACE,MAAM;UAC7D,IAAIF,MAAM,CAACC,MAAM,KAAK,WAAW,EAC7B,oDAAAhB,MAAA,CAA6Ce,MAAM,CAACG,MAAM;UAC9D,IAAIH,MAAM,CAACC,MAAM,KAAK,UAAU,EAC5B,+DAAAhB,MAAA,CAA+Ce,MAAM,CAACI,QAAQ;UAClE,IAAIJ,MAAM,CAACC,MAAM,KAAK,OAAO,EAAE;YAC3B,uFAAAhB,MAAA,CAAqEe,MAAM,CAACK,OAAO;UACvF;UACA,uBAAApB,MAAA,EAAAc,oBAAA,GAAuB5C,KAAK,CAAC6C,MAAM,CAACC,MAAM,CAAC,cAAAF,oBAAA,cAAAA,oBAAA,GAAIhB,KAAK,CAACkB,MAAM;QAC/D;MACA,KAAK,iBAAiB;QAClB,kDAAAhB,MAAA,CAA+CF,KAAK,CAACuB,OAAO;MAChE,KAAK,mBAAmB;QACpB,UAAArB,MAAA,CAAUF,KAAK,CAACwB,IAAI,CAAClB,MAAM,GAAG,CAAC,GAAG,uBAAuB,GAAG,kBAAkB,QAAAJ,MAAA,CAAK1D,IAAI,CAACgE,UAAU,CAACR,KAAK,CAACwB,IAAI,EAAE,IAAI,CAAC;MACxH,KAAK,aAAa;QACd,OAAO,+BAA+B;MAC1C,KAAK,eAAe;QAChB,OAAO,qBAAqB;MAChC,KAAK,iBAAiB;QAClB,OAAO,4BAA4B;MACvC;QACI;IACR;EACJ,CAAC;AACL,CAAC;AACD,eAAe,YAAY;EACvB,OAAO;IACHC,WAAW,EAAEhF,KAAK,CAAC;EACvB,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}